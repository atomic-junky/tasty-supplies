name: Build

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12.2"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Update CHANGELOG
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build project
        run: beet -p ./tasty_supplies build
      
      - name: Zip all builds
        run: |
          cd ./tasty_supplies/build/
          for dir in *; do
            cd "./$dir"
            zip -r "../$dir.zip" ./*
            cd ..
          done

      - name: Create combined .jar
        if: always()
        run: |
          set -eux
          TMP=./tasty_supplies/build/jar_temp
          rm -rf "$TMP"
          mkdir -p "$TMP"

          # Copy contents (not directories) of each build into TMP
          for d in tasty_supplies/build/*; do
            if [ -d "$d" ]; then
              name=$(basename "$d")
              if [ "$name" = "jar_temp" ]; then
                continue
              fi
              # lower-case name for matching
              nl=$(echo "$name" | tr '[:upper:]' '[:lower:]')
              # If this looks like a datapack build, copy only its data/ folder
              if [[ "$nl" == *data* ]]; then
                if [ -d "$d/data" ]; then
                  mkdir -p "$TMP/data"
                  cp -a "$d/data/." "$TMP/data/" || true
                fi
              else
                # resource pack: copy full contents
                cp -a "$d/." "$TMP/" || true
              fi
            fi
          done

          # Include loader config files from repo src/ (place at jar root)
          if [ -f tasty_supplies/src/fabric.mod.json ]; then cp tasty_supplies/src/fabric.mod.json "$TMP/" || true; fi
          if [ -f tasty_supplies/src/quilt.mod.json ]; then cp tasty_supplies/src/quilt.mod.json "$TMP/" || true; fi
          if [ -f tasty_supplies/src/META-INF/mods.toml ]; then mkdir -p "$TMP/META-INF"; cp tasty_supplies/src/META-INF/mods.toml "$TMP/META-INF/" || true; fi
          if [ -f tasty_supplies/src/META-INF/neoforge.mods.toml ]; then mkdir -p "$TMP/META-INF"; cp tasty_supplies/src/META-INF/neoforge.mods.toml "$TMP/META-INF/" || true; fi

          # Create the jar from TMP contents
          cd "$TMP"
          jar -cf ../tasty-supplies.jar .
          cd -
          rm -rf "$TMP"

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tasty-supplies-builds
          path: |
            tasty_supplies/build/*.zip
            tasty_supplies/build/tasty-supplies.jar
      
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          files: |
            ./tasty_supplies/build/*.zip
            ./tasty_supplies/build/tasty-supplies.jar
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Commit CHANGELOG.md
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md